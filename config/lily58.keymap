/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// -------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6    |  7    |  8    |  9   |   0   |   =   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y    |  U    |  I    |  O   |   P   |   -   |
// |  CAPS |  A  |  S  |  D   |  F   |  G   |                   |  H    |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  LOWER |  | RAISE |  N    |  M    |  ,    |  .   |   /   | SHIFT |
//                     | CTRL | LALT |  GUI |  SPACE |  | ENTER | LOWER | BSPC  | GUI   |
			bindings = <
&kp ESC   &kp N1  &kp N2  &kp N3    &kp N4   &kp N5                        &kp N6  &kp N7   &kp N8    &kp N9   &kp N0    &kp EQUAL
&kp TAB   &kp Q   &kp W   &kp E     &kp R    &kp T                         &kp Y   &kp U    &kp I     &kp O    &kp P     &kp MINUS
&kp CAPS  &kp A   &kp S   &kp D     &kp F    &kp G                         &kp H   &kp J    &kp K     &kp L    &kp SEMI  &kp SQT
&kp LSHFT &kp Z   &kp X   &kp C     &kp V    &kp B     &mo 1      &mo 2    &kp N   &kp M    &kp COMMA &kp DOT  &kp FSLH  &kp RSHFT
                          &kp LCTRL &kp LALT &kp LGUI  &kp SPACE  &kp RET  &mo 1   &kp BSPC &kp RGUI
			>;
		};

		lower_layer {
// ---------------------------------------------------------------------------------------------------------
// |   `   |     |     |       |      |      |                   |      |      |    |       |     |       |
// |       |     |     |       |      |      |                   |  [   |  ]   | \  |       |     |       |
// |       |     |     |       |      |      |                   | LEFT | DOWN | UP | RIGHT |     |       |
// | SHIFT |     |     |       |      |      |        |  |       |      |      |    |       |     | SHIFT |
//                     | CTRL  | LALT |  GUI |  SPACE |  | ENTER |      |      |    |
			bindings = <
&kp GRAVE  &trans  &trans  &trans    &trans   &trans                        &trans   &trans   &trans   &trans    &trans &trans
&trans     &trans  &trans  &trans    &trans   &trans                        &kp LBKT &kp RBKT &kp BSLH &trans    &trans &trans
&trans     &trans  &trans  &trans    &trans   &trans                        &kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans &trans
&kp LSHFT  &trans  &trans  &trans    &trans   &trans    &trans     &trans   &trans   &trans   &trans   &trans    &trans &kp RSHFT
                           &kp LCTRL &kp LALT &kp LGUI  &kp SPACE  &kp RET  &trans   &trans   &trans
			>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------------
// | BT1 | BT2 | BT3 | BT4 | BT5 | BTCLR |                  | BRI_DN | BRI_UP | PLAY_PUASE | MUTE | VOL_DN | VOL_UP |
// |     |     |     |     |     |       |                  |   {    |   }    |     |      |      |        |        |
// |     |     |     |     |     |       |                  |        |        |            |      |        |        |
// |     |     |     |     |     |       |       |  |       |        |        |            |      |        |        |
//                   |     |     |       |       |  |       |        |        |            |
			bindings = <
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR                      &kp C_BRI_DN &kp C_BRI_UP &kp C_PP &kp C_MUTE &kp C_VOL_DN &kp K_VOL_UP
&trans       &trans       &trans       &trans       &trans       &trans                          &kp LBRC     &kp RBRC     &kp PIPE &trans     &trans       &trans
&trans       &trans       &trans       &trans       &trans       &trans                          &trans       &trans       &trans   &trans     &trans       &trans
&trans       &trans       &trans       &trans       &trans       &trans                          &trans       &trans       &trans   &trans     &trans       &trans
                                       &trans       &trans       &trans     &trans   &trans      &trans       &trans       &trans
			>;
		};
	};
};
